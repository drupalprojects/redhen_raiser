// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}


// Raiser Mixins

@mixin clear-btn {
  background: none;
  border: 3px solid $primary;
  border-radius: 0.7em;
  color: $primary;
  padding: 0.8em 1em;

  &:hover {
    color: $white;
    background: $primary;
    border: 3px solid $primary + 50; 
    @include transition(all 0.5s);
  }
}

// Breakpoints
/* Large desktop */
@mixin xlarge {
  @media (min-width: 75em) {
    @content;
  }
}

@mixin large {
  @media (max-width: 48em) and (max-width: 61.188em) {
    @content;
  }
}

@mixin small {
  @media (max-width: 47.938em) {
    @content; 
  }
}
